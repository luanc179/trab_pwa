@page "/livro_alterar/{Id}"
@using CadastroLivrosWasm.Helpers;
@using CadastroLivroDll.DOs;
@inject NavigationManager NavigationManager

<PageTitle>Cadastro de Livros</PageTitle>

<h1>Livros</h1>

@if (obj == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <EditForm Model="@obj" OnValidSubmit="@Gravar">
    <DataAnnotationsValidator />
    <ValidationSummary />
        <div>
            <div>
                <label class="form-label">Nome</label>
                <input class="form-control" @bind="@obj.Nome" />
                <ValidationMessage For="() => obj.Nome" />
            </div>
            <div>
                <label class="form-label">Autor</label>
                <input class="form-control" @bind="@obj.Autor" />
                <ValidationMessage For="() => obj.Autor" />
            </div>
            <div>
                <label class="form-label">Genero</label>
                <input class="form-control" @bind="@obj.Genero" />
                <ValidationMessage For="() => obj.Genero" />
            </div>
            <div class="mt-2">
                <button class="btn btn-success" type="submit">Gravar</button>
                <a class="ml-1 btn btn-secondary" href="./livros">Voltar</a>
            </div>


            <Imagem Entidade="livro" Id=@Id />
            
        </div>
    </EditForm>
}

@code {
    protected async override Task OnInitializedAsync()
    {        
        obj = await api.RetornarPorIdAsync(Id);
    }

    private AcessoApi<LivroDO> api = new AcessoApi<LivroDO>("api/livro");

    private LivroDO? obj = null;

    [Parameter]
    public string Id { get; set; } = "";

    private async void Gravar()
    {
        if (obj != null)
        {
            if (await api.AlterarAsync(obj))
            {
                NavigationManager.NavigateTo("livros");
            }
        }
    }
}
